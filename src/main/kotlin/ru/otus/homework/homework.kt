package ru.otus.homework

/* 1. Функция с обязательными и необязательными позиционными параметрами
Напишите функцию, которая будет принимать:

- два обязательных аргумента типа `Int`
- неограниченное число дополнительных аргументов типа `Int`

Функция должна возвращать сумму первого, второго и дополнительных аргументов.
Если в функцию передано меньше двух аргументов, программа не должна собираться (ошибка компиляции).*/

fun sumOfInt(a: Int, b: Int, vararg c: Int) = a + b + c.sum()

/*2. Функция с необязательным параметром и позиционными параметрами
Напишите функцию, которая будет принимать:

- неограниченное количество строк `String`
- необязательный параметр типа `Char`

Функция должна возвращать объединение строк.

- по умолчанию, строки объединяется пробелом
- если передан `Char` параметр, то объединение делается этим символом*/

fun joinString(vararg inputStrings: String, separator: Char? = null) =
    if (separator == null) inputStrings.joinToString(" ")
    else inputStrings.joinToString("$separator")


/*
4. Функция, измеряющая время выполнения другой функции

Напишите функцию, которая бы принимала другую функцию в качестве параметра.
Ваша функция должна запустить функцию, переданную в аргументе, и вернуть время ее выполнения.

Примечание: используйте что-то долгое (например, длинный цикл с печатью) в качестве тестовой функции. Иначе, вы можете
не заметить, сколько времени прошло*/

fun funcTimer(function: () -> Unit): Long {
    val start = System.currentTimeMillis()
    function()
    val end = System.currentTimeMillis()
    return end - start
}
